1. Скалярная величина - величина, которую можно задать одним числом.
   Для СУБД - скалярное означает - простой, примитивный результат по типу строки или integer.

2. 0x .... Пример 0xc00007b - 16-ричные числа. Те которые 1,.., 10, A, B, C, D, E, F
   По сути простое число Integer. Вроде даже можно как то дробное так задать разных типов

   Восьмеричные (octal) - считаются пережитком 50-60 годов, литерал для их записи не был добавлен, но можно через Convert.ToInt32("12", 8);

   (C# 7.0) Бинарные литералы начинаются с 0b.. (0b0001) + можно их разделять типа 0b001_100_123..., значение не поменяется
   https://stackoverflow.com/questions/594720/c-sharp-binary-literals

   Decimal(десятичное) - 

3. Yield - в переводе уступи

4. Побитовые операции (пример: 1 << 2 = 4 = 2 в степени 2, 1 << n = 2 в степени n)
   Ключ слово побитовый означает про сдвиг битов в двоичной системе счисления. Влево <<, вправо >>.
   Применяется в "Олимпиадных задачах" или в примитивных системах выдачи прав (Где 1111 запись будет означать все права)
   | - соединяет биты.
   https://ru.stackoverflow.com/questions/240726/%D0%A7%D1%82%D0%BE-%D0%BE%D0%B7%D0%BD%D0%B0%D1%87%D0%B0%D0%B5%D1%82-%D0%B7%D0%B0%D0%BF%D0%B8%D1%81%D1%8C-%D0%B8%D0%BB%D0%B8-%D0%B2-%D0%BA%D0%BE%D0%B4%D0%B5
   https://habr.com/ru/post/134557/

5. За пол секунды процессор современный успевает выполнить около 4 миллиардов инструкций (прочитал где то на StackOverflow).
   Но кол-во тик в секунду в .NET считается 10 миллионов.
   Тики хранятся в long (Int64) (18,5 квинтиллион значений (но из-за того что половина до нуля, то 9 квинтиллион)).
   Поэтому их хватает на всю жизнь точно.
   А супер огромное можно в decimal тип. Он размером 1.0 * 10 в 28 степени, поддерживает 28 знаков после запятой. (16 байт занимает)
   Тут вычислительная техника просто безгранична судя по всему.