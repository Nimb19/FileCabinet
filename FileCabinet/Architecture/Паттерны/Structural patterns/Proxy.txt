Proxy паттерн. Структурный паттерн.
https://www.youtube.com/watch?v=ceotfvYSm7I

! Разница между Proxy и Decorator https://stackoverflow.com/questions/18618779/differences-between-proxy-and-decorator-pattern 
  Прокси знает конкретный тип, к которому проксирует трафик, а Декоратор обвязывает обобщённый тип, разницы практически нет.
 
Используется как передатчик инфы к ресурсу. 
Например: зашифровать трафик до Proxy, или просто более расширенная опциями версия, которая преобразует доп. функции в понятные конечному объекту.

Существуют удалённые (серверные) и клиентские версии реализации. Но суть всегда одна: 
Добавление какой-нибудь общей логики/модификация/доработка, что бы к примеру переформатировать под нужный лад.

В простом клиентском случае, к примеру, можно делать прокси-класс для взаимодействия с БД, с платформами типа телеграма. 
Прокси будет добавлять логгирование/кеширование/что захотите к запросам.
