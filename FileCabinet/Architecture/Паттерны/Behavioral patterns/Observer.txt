Наблюдатель
https://metanit.com/sharp/patterns/3.2.php

Observer (ещё называют Publisher-Subscriber (есть сайт, и есть подписчики на уведомления с него)) - один ко многим - один объект отправляет в обсервер сообщение - 
все его читают и решают делать ли им что то узнав это. Например логгировать можно.

То есть, если мы хотим, что бы на состояние/действия какого-то класса можно было подписаться, отслеживать, в том числе извне, то можно добавить email ящик такой.
Для того, что бы компоненты были независимы.
Когда один объект и множество подписчиков. И заранее их число не известно.

# События обычно удобнее и понятнее людям в использовании. 
  Поэтому, Observer прикручивают только к закрытым большим системам, как веб-сервер или SqlClient в c#, которые посылают уведомления когда начинают и заканчивают что то делать.
  Всё это полезно в основном для логгирование запросов/времени отправки. 
  Тут мы отвязываемся от зависимостей конкретных классов в этих модулях/клиентах, зависим только от типа уведомления. Так что для логирования это гораздо удобнее.