https://habr.com/ru/post/354046/

В ООП языках существует 3 способа организации взаимодействия между классами:
1) Наследование - как правило добавляет функционал/поля хранения родительскому классу (ключ. слово является. Типо Лада Калина является машиной, наследник);
2, 3) Ассоциация - когда один класс включает у себя в другой в поле (ключ. слово - имеет. Типо Авто имеет двигатель). 2 частных её случая:
	1. Композиция - когда двигатель привязан к автомобилю и не должен существовать извне. Полностью управляется автомобилем. В типичном сценарии создаётся в конструкторе.
	2. Агрегация - когда двигатель создаётся на фабрике к примеру или в любом другом участке кода извне авто. То есть авто можно создавать с любым двигателем, оно его не создаёт.

Чёткого правила нет, какое из видов взаимодействия выбрать. 
Пишущий программу разум выбирает что из этого лучше, что бы иметь крутую архитектуру и при этом не плодить лишних абстракций. 