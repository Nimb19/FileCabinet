Поведенческий паттерн Стратегия. Относится к поведению объектов нашей системы.
https://www.youtube.com/watch?v=v4zBX86SgmQ

# Выделить схожие алгоритмы решающие одну задачу в отдельные классы с одним интерфейсом, что бы управлять их внедрением извне класса

Очень прост, вместо скрытой логики внутри какого-то действующего класса, навешивания ему блоков if/else на команды различных действий 
(что нарушает open/closed principle - принцип открытости для расширения, но закрытости для модификации) - говорит реализовать общий интерфейс, и устанавливать/передавать
реализующего его объекты действующему классу.

Банальный пример в видео - вместо сокрытия в методе Attack какой-то атакующей логики какого-то оружия, которая выбирается из контекста ->
мы выносим оружие как стратегию и реализуем класс действующего героя так, что бы он устанавливал выбранную нами стратегию.

Готово! Класс закрыт для модификации, но открыт для расширения, у него нет какой-то скрытой логики из if/else, 
которую придётся модифицировать при добавлении чего то нового.