System.Threading.Monitor
Статический класс, вспомогательный для разделения доступа к каким-либо ресурсам/блокам кода.

Например: конструкция lock(object){ // блок кода, который может выполняться только в одном потоке \\ }
Она под капотом использует:
```
(1) Monitor.Enter(object); // Получает монопольную блокировку указанного объекта. Если блокировка кем то уже взята и не отпущена, то блокирует поток пока не получит
try
{
	// блок кода, который может выполнятся только в одном потоке \\ 
}
finally
{
	(2) Monitor.Exit(object); // Отпускает блокировку указанного объекта
}
// так же существует полезная перегрузка Monitor.Enter(object, ref bool была ли выдана блокировка);
```

(3) bool IsEntered(object) - возвращает значение, блокирован ли текущий объект ТЕКУКЩИМ потоком ! 
(естественно работает только если блокировка была вызвана с помощью класса Monitor)
