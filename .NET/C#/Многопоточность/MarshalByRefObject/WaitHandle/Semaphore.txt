System.Threading.Semaphore
https://learn.microsoft.com/ru-ru/dotnet/api/system.threading.semaphore?view=net-6.0

Ограничивает количество потоков, обращаемых к какому-либо ресурсу.
К примеру, это как горстка монет. Когда поток хочет обратится к ресурсу - он берёт монетку, а как-только отпускает ресурс - возвращает монетку обратно для других потоков.
Не использует удостоверение потока.

WaitOne() - взять монетку
bool WaitOne(TimeSpan) - пытается взять монетку в течении заданного времени (так же с Int32 (в миллисекундах)), если не смог - вернёт false
Release() - отпустить одну монетку. Если вызвать лишний раз, то вызовется SemaphoreFullException, поэтому нельзя лишний раз нажимать
Release(int) - отпустить указанное количество монеток (один поток может брать несколько монеток)

Ожидающие потоки будут получать доступ к ресурсу в случайном порядке.

Существуют локальные и системные (так же, именованные) семафоры. 
Системные - это те что видны во всей ОС и подходят для межпроцессной синхронизации.

Что бы создать системный, нужно вызвать конструктор с указанием имени семафора.
new Semaphore(Int32 начальное кол-во монет, Int32 максимальное кол-во монет, "its me")
Что бы подключиться к системному, нужно вызвать OpenExisting("its me")