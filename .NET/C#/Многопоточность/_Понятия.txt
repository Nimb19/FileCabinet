1. Домен синхронизации (Synchronization domain) - 
В контексте синхронизации потоков - набор контекстов и объектов, совместно использующих одну блокировку.

2. Домен приложения (Application domain) - 
Раздел процессов в ОС, где находиться одно или несколько приложений.

Объекты в одном домене могут использоваться приложениями напрямую. 
Но в процесс за границу домена может посылаться либо копия объекта, либо сообщением (с помощью какого-нибудь proxy-сервера).

MarshalByRefObject - для посылки копии объекта за границу домена приложения.
MarshalByRefObject is the base class for objects that communicate across application domain boundaries by exchanging messages using a proxy.

Экспертное мнение начальника:
Во первых ОС про это ничего не знает AppDomain чисто .NET/CLR штука.
Используется для подгрузки, например, библиотек разных версий 
	(все библиотеки подгружаются в текущий автоматически созданный AppDomain и удалить их оттуда нельзя)
Для того что бы подгружать, к примеру, плагины (у которых могут быть зависимости разных версий) - желательно создавать новый домен приложения и загружать его туда.
Потому что если какому-нибудь плагину нужно будет подгрузить другую версию какой нибудь из библиотеки - он схватит ошибку подгрузки однйо и той же библиотеки.
Или впринципе для подгрузки библиотек разных версий используется.

Потому что домен не может подгрузить одну и ту же библиотеку (проверяя по имени) два раза. А в другом домене можно.
